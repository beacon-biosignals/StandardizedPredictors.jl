var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = StandardizedPredictors","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"<!– TODO: structure this to be clearer about the different parts of the API –>","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [StandardizedPredictors]","category":"page"},{"location":"api/#StandardizedPredictors.Center","page":"API","title":"StandardizedPredictors.Center","text":"struct Center\n\nRepresents a centering scheme, akin to StatsModels.AbstractContrasts.  Pass as value in Dict as hints to schema (or as contrasts kwarg for fit).\n\nExamples\n\nCan specify center value to use:\n\njulia> schema((x=collect(1:10), ), Dict(:x => Center(5)))\nStatsModels.Schema with 1 entry:\n  x => center(x, 5)\n\nOr center will be automatically computed if left out:\n\njulia> schema((x=collect(1:10), ), Dict(:x => Center()))\nStatsModels.Schema with 1 entry:\n  x => center(x, 5.5)\n\n\n\n\n\n","category":"type"},{"location":"api/#StandardizedPredictors.CenteredTerm","page":"API","title":"StandardizedPredictors.CenteredTerm","text":"struct CenteredTerm{T,C} <: AbstractTerm\n\nA lazily centered term.  A wrapper around an T<:AbstractTerm which will produce centered values with modelcols by subtracting center from each element generated by the wrapped term with modelcols.\n\nFields\n\nterm::T: The wrapped term.\ncenter::C: The center value subtracted from the resulting modelcols.\n\nExamples\n\nDirectly construct with given center:\n\njulia> d = (x=collect(1:10), );\n\njulia> t = concrete_term(term(:x), d)\nx(continuous)\n\njulia> tc = CenteredTerm(t, 5)\ncenter(x, 5)\n\njulia> hcat(modelcols(t + tc, d)...)\n10×2 Matrix{Int64}:\n  1  -4\n  2  -3\n  3  -2\n  4  -1\n  5   0\n  6   1\n  7   2\n  8   3\n  9   4\n 10   5\n\nConstruct with lazy centering via Center\n\njulia> tc = concrete_term(term(:x), d, Center())\ncenter(x, 5.5)\n\njulia> hcat(modelcols(t + tc, d)...)\n10×2 Matrix{Float64}:\n  1.0  -4.5\n  2.0  -3.5\n  3.0  -2.5\n  4.0  -1.5\n  5.0  -0.5\n  6.0   0.5\n  7.0   1.5\n  8.0   2.5\n  9.0   3.5\n 10.0   4.5\n\nOr similarly via schema hints:\n\njulia> sch = schema(d, Dict(:x => Center()))\nStatsModels.Schema with 1 entry:\n  x => center(x, 5.5)\n\n\n\n\n\n","category":"type"},{"location":"api/#StandardizedPredictors.center!-Tuple{Any}","page":"API","title":"StandardizedPredictors.center!","text":"center!(f=mean, x, y=f(skipmissing(x)))\n\nCenter an array x in place about a scalar y.\n\nSee also center\n\n\n\n\n\n","category":"method"},{"location":"api/#StandardizedPredictors.center-Tuple{Any}","page":"API","title":"StandardizedPredictors.center","text":"center(f=mean, x, y=f(skipmissing(x)))\n\nCenter an array x about a scalar y.\n\nSee also center!\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = StandardizedPredictors","category":"page"},{"location":"#StandardizedPredictors","page":"Home","title":"StandardizedPredictors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides convenient and modular functionality for standardizing regression predictors.  Standardizing predictors can increase numerical stability of some estimation procedures when the predictors are on very different scales or when they are non-orthogonal.  It can also produce more interpretable regression models in the presence of interaction terms.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The examples below demonstrate the use of StandardizedPredictors.jl with GLM.jl, but they will work with any modeling package that is based on the StatsModels.jl formula.","category":"page"},{"location":"#Centering","page":"Home","title":"Centering","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let's consider a (slightly) synthetic dataset of weights for adolescents of different ages, with predictors age (continuous, from 13 to 20) and sex, and weight in pounds.  The weights are based loosely on the medians from the CDC growth charts, which show that the median male and female both start off around 100 pounds at age 13, but by age 20 the median male weighs around 155 pounds while the median female weighs around 125 pounds.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using StandardizedPredictors, DataFrames, StatsModels, GLM\n\njulia> data = DataFrame(age=[13:20; 13:20], \n                        sex=repeat([\"male\", \"female\"], inner=8),\n                        weight=[range(100, 155; length=8); range(100, 125; length=8)])\n16×3 DataFrame\n Row │ age    sex     weight  \n     │ Int64  String  Float64 \n─────┼────────────────────────\n   1 │    13  male    100.0\n   2 │    14  male    107.857\n   3 │    15  male    115.714\n   4 │    16  male    123.571\n   5 │    17  male    131.429\n   6 │    18  male    139.286\n   7 │    19  male    147.143\n   8 │    20  male    155.0\n   9 │    13  female  100.0\n  10 │    14  female  103.571\n  11 │    15  female  107.143\n  12 │    16  female  110.714\n  13 │    17  female  114.286\n  14 │    18  female  117.857\n  15 │    19  female  121.429\n  16 │    20  female  125.0","category":"page"},{"location":"","page":"Home","title":"Home","text":"In this dataset, there's obviously a main effect of sex: males are heavier than females for every age except 13 years.  But if we run a basic linear regression, we see something rather different:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lm(@formula(weight ~ 1 + sex * age), data)\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}}}}, Matrix{Float64}}\n\nweight ~ 1 + sex + age + sex & age\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────────────────────\n                     Coef.   Std. Error                   t  Pr(>|t|)  Lower 95%  Upper 95%\n───────────────────────────────────────────────────────────────────────────────────────────\n(Intercept)       53.5714   6.52413e-13   82112795579380.03    <1e-99   53.5714    53.5714\nsex: male        -55.7143   9.22651e-13  -60385015159419.42    <1e-99  -55.7143   -55.7143\nage                3.57143  3.91643e-14   91190809902610.67    <1e-99    3.57143    3.57143\nsex: male & age    4.28571  5.53868e-14   77377968076840.64    <1e-99    4.28571    4.28571\n───────────────────────────────────────────────────────────────────────────────────────────","category":"page"},{"location":"","page":"Home","title":"Home","text":"There is a main effect of sex but it goes in the exact opposite direction of what we know to be true, and says that males are 55 pounds lighter.  The reason is that because there's an interaction between sex and age in this model, the main effect of sex the (extrapolated) difference in weight between sexes when age is 0.","category":"page"},{"location":"","page":"Home","title":"Home","text":"That's a non-sensical value, since it's far outside of our range of ages.  When we Center age, we get something more meaningful:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lm(@formula(weight ~ 1 + sex * age), data; contrasts=Dict(:age => Center()))\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}}}}, Matrix{Float64}}\n\nweight ~ 1 + sex + center(age, 16.5) + sex & center(age, 16.5)\n\nCoefficients:\n─────────────────────────────────────────────────────────────────────────────────────────────────────\n                             Coef.   Std. Error                     t  Pr(>|t|)  Lower 95%  Upper 95%\n─────────────────────────────────────────────────────────────────────────────────────────────────────\n(Intercept)              112.5      5.80156e-15  19391345671018664.00    <1e-99  112.5      112.5\nsex: male                 15.0      8.20464e-15   1828233602707956.50    <1e-99   15.0       15.0\ncenter(age)                3.57143  2.53201e-15   1410512847055512.75    <1e-99    3.57143    3.57143\nsex: male & center(age)    4.28571  3.5808e-15    1196859838924435.25    <1e-99    4.28571    4.28571\n─────────────────────────────────────────────────────────────────────────────────────────────────────","category":"page"},{"location":"","page":"Home","title":"Home","text":"We can also center age at a different value, like the start of our range where the difference is essentially zero:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> lm(@formula(weight ~ 1 + sex * age), data; contrasts=Dict(:age => Center(13)))\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}}}}, Matrix{Float64}}\n\nweight ~ 1 + sex + center(age, 13) + sex & center(age, 13)\n\nCoefficients:\n───────────────────────────────────────────────────────────────────────────────────────────────────────────────\n                                Coef.   Std. Error                    t  Pr(>|t|)      Lower 95%      Upper 95%\n───────────────────────────────────────────────────────────────────────────────────────────────────────────────\n(Intercept)              100.0         2.18363e-14  4579537167175366.00    <1e-99  100.0          100.0\nsex: male                 -9.4739e-14  3.08811e-14                -3.07    0.0098   -1.62023e-13   -2.74548e-14\ncenter(age)                3.57143     5.21987e-15   684199229964770.38    <1e-99    3.57143        3.57143\nsex: male & center(age)    4.28571     7.38201e-15   580562298228847.88    <1e-99    4.28571        4.28571\n───────────────────────────────────────────────────────────────────────────────────────────────────────────────","category":"page"}]
}
